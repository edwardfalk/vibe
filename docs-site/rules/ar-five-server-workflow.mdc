---
title: Five Server Dev Workflow
---

# Five Server Dev Workflow
<!-- desc: Prevents port conflicts; details exact scripts for starting/stopping the dev web server. -->

> Definitive guide to running the **Five Server** live-reload web server with Bun without spawning duplicate instances.

## Why Five Server?
* Lightweight static+live-reload server used during local development & Playwright probes.
* Must listen on **port 5500** so automated tests and docs assume the correct origin.

## Provided Bun Scripts (package.json)
| Script | What it does |
|--------|--------------|
| `serve` | `bun run five-server --port=5500 --root=. --ignore=playwright-report,test-results,coderabbit-reviews` – serves repository root at http://localhost:5500 (matches Playwright config). |
| `watch-bugs` | Moves new screenshots/logs into the correct ticket folder. |
| `dev:start` | Orchestrates Five-Server with robust port checks. |
| `dev:stop` | Graceful shutdown of all tracked child processes (idempotent). |
| `dev:status` | Table of running processes and port usage. |
| `dev:restart` | Convenience alias: clean stop ➜ start. |

## Always-Correct Workflow
1. **Open a new terminal** (cmd.exe by default; PowerShell optional).
2. Run:
   ```bat
   bun run dev:restart  # or bun run dev:start
   ```
3. Wait for the log: `Five-server running at http://localhost:5500`.
4. Open the URL or let Playwright probes connect.

### Do **NOT**
* Run `bun run serve` in a second terminal while `dev:start` is already running.
* Skip `dev:stop` before manual `serve` attempts – leftover processes cause port conflicts.

## Detecting & Killing Stray Servers
If you still see `EADDRINUSE` or Five Server jumps to `http://localhost:56***`:
```bat
bunx kill-port 5500 3001
```

_Pro tip:_ Add VS Code/Cursor task **"Dev: clean & start"** that runs `dev:fresh` so humans and AI run the same command.

## Environment Variable Override (rare)
Five Server obeys `PORT` – **avoid setting it** so 5500 stays the canonical dev port.

---
## Configuration & Troubleshooting (condensed)
- Type: Five-Server via `bunx five-server`; Entry: `scripts/dev-server.js`; Port: 5500; Root: repo `.`; Page: `/public/index.html`.
- Import Map: use absolute paths from root for all `@vibe/*` entries.
- Audio Manifest: runtime fetch from `/audio/manifest.json`.
- Tests: `INDEX_PAGE` exported from `tests/playwright.setup.js` points to `/public/index.html`.
- Common fixes: restart (`dev:stop` → `dev:start`), verify import-map paths, confirm local Tone mapping.

---
**See also:**
* [Testing & Debugging Rule](mdc:.cursor/rules/ar-testing-and-debugging.mdc) – probes expect `http://localhost:5500`.
* [Vibe Architecture & Coding Standards](mdc:.cursor/rules/ar-architecture-and-standards.mdc) – Windows/Bun conventions.

---
**See also:**
* [Testing & Debugging Rule](mdc:.cursor/rules/ar-testing-and-debugging.mdc) – probes expect `http://localhost:5500`.
* [Vibe Architecture & Coding Standards](mdc:.cursor/rules/ar-architecture-and-standards.mdc) – Windows/Bun conventions.
