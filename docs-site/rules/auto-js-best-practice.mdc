---
description: Additional coding standards and patterns for all core game modules in /js/. Applies to all .js files in the js directory. Expands on the always rule.
globs: packages/**/*.js
alwaysApply: false
---
# Core Game Module Standards (packages/)

In addition to the global Vibe commandments (see always rule):

- All math functions must be imported from `mathUtils.js`â€”never use p5.js or global math functions.
- Each module should have a single, clear responsibility. If a file grows beyond 500 lines, consider splitting it.
- Prefer constructor injection for dependencies (audio, cameraSystem, etc.) in new modules.
- Do not attach game state or systems to the p5 instance (`p`). Only use `p` for p5-native methods and properties.
- If a module handles drawing, all p5 calls must be prefixed with `p.` or `this.p.` (instance mode).
- Add a top-of-file comment if the file requires p5.js globals (e.g., `// Requires p5.js for constrain(), random(), lerp(), etc.`).
- Use early returns to avoid nested conditions and keep code readable.

- If you encounter a bug or suboptimal code, add a `// TODO:` comment outlining the problem.
