---
description: 
globs: 
alwaysApply: true
---
Finding high quality public library documentation, code snippets, to improve code quality and to enhance testing workflows in the Vibe project. P5, js, and much more.
+<!-- desc: Guidance on using Context7 tools to fetch external library docs/snippets. -->
[ar-context7-best-practices.mdc](mdc:.cursor/rules/ar-context7-best-practices.mdc)

# Use Context7 MCP tools **resolve-library-id** **get-library-docs** for Public/Open-Source Libraries
- Use Context7 MCP tools to fetch documentation, code snippets, and best practices for any major open-source library (e.g., p5.js, Tone.js, Pixi.js).
- Use the canonical library ID (e.g., `/processing/p5.js`) returned by Context7 for all further queries.

## Topic-Focused Queries
- Specify a topic (e.g., "instance mode", "unit testing", "WebGL", "Mocha", "performance") to get focused, relevant results.
- Use topic filtering to surface best practices, advanced usage, and common pitfalls.

## Example Libraries & Topics for Vibe

Below is a non-exhaustive list of public/open-source libraries that frequently help the Vibe project, together with **canonical Context7 IDs** and suggested *topic* filters.  Use these as copy-paste starting points when calling the Context7 tools.

| Area | Library (ID) | Useful Topics |
|------|--------------|---------------|
| Core rendering & math | `/processing/p5.js` | "instance mode", "off-screen buffers", "performance", "WebGL", "shaders", "pixel manipulation", "post-processing" |
| High-performance 2D renderer | `/pixijs/pixijs` | "sprite batching", "particle container", "filters" |
| Game physics | `/liabru/matter-js` | "collision detection", "broad-phase", "composite bodies" |
| Game audio & music | `/tonejs/tone.js` | "scheduling", "transport", "granular synthesis" |
| Browser automation tests | `/microsoft/playwright` | "canvas clicks", "keyboard events", "locator best practices" |
| Utility & data | `/lodash/lodash` | "chain", "immutability patterns" |

### Quick Workflow Example

1. **Resolve the library ID** (only needed once per session):
   ```
   // pseudo-call – performed via "resolve-library-id" tool
   resolve-library-id({ libraryName: "p5.js" }) ➜ returns "/processing/p5.js"
   ```
2. **Fetch focused docs/snippets**:
   ```
   // pseudo-call – performed via "get-library-docs" tool
   get-library-docs({ context7CompatibleLibraryID: "/processing/p5.js", topic: "instance mode", tokens: 3000 })
   ```
3. **Use the returned snippets** in code reviews, refactors, or tests.

> Tip: Cache heavy doc fetches with `scripts/cache-context7-docs.js` to avoid hitting rate limits during repeated runs.