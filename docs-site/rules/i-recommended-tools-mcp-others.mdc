---
description: 
globs: 
alwaysApply: false
---
# Recommended tools for the Ai assistent:

* MCP Desktop Commander: For lightning fast search and access to all files on all partitions on the disk, list terminal sessions and processes etc. [ar-mcp-desktop-commander-best-practices.mdc](mdc:.cursor/rules/ar-mcp-desktop-commander-best-practices.mdc)

* MCP Context7: High quality code snippets and best practices regarding p5, Playwright etc. [ar-context7-best-practices.mdc](mdc:.cursor/rules/ar-context7-best-practices.mdc)

* MCP SequentialThinking: For complex thought processes

## Quick Reference – Pick the Right MCP Tool

| Goal | Recommended Tool | Why |
|------|------------------|-----|
| Mass read / edit files, directory manipulations | **Desktop Commander – Filesystem suite** (`mcp_desktop-commander_*`) | Absolute-path based operations, batch edits, metadata. |
| Search docs / code snippets for public libs | **Context7** (`resolve-library-id`, `get-library-docs`) | Pulls authoritative documentation & examples. |
| Complex multi-step reasoning / planning | **SequentialThinking** | Keeps chain-of-thought organized across steps. |
| Automated browser tests / probes | **MCP Playwright client** (`mcp_playwright_*`) | Provides DOM-level commands, integrates with CI. |
| Capture & analyze project memory graph | **MCP Memory tools** (`mcp_memory_*`) | Adds, queries, and visualizes structured knowledge. |

### ✨ SequentialThinking Example
```jsonc
{
  "path": "mcp_sequential-thinking_sequentialthinking",
  "args": {
    "thought": "Brainstorm refactor steps for EnemyFactory module",
    "nextThoughtNeeded": true,
    "thoughtNumber": 1,
    "totalThoughts": 5
  }
}
```
The AI will respond with the first thought and indicate whether more thinking steps are required. Continue feeding additional calls (increment `thoughtNumber`) until `nextThoughtNeeded` becomes `false`.